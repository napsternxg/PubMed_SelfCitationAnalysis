feature_dict = { 
    "Intercept": [u'Intercept',],
    "Gender": [
      u'C(gender, levels=GENDERS)[T.F]',
      u'C(gender, levels=GENDERS)[T.M]',
      ],
    "Affiliation": [
      u'C(source_country, levels=TOP_15_COUNTRIES)[T.UNKNOWN]',
      u'C(source_country, levels=TOP_15_COUNTRIES)[T.UK]',
      u'C(source_country, levels=TOP_15_COUNTRIES)[T.JAPAN]',
      u'C(source_country, levels=TOP_15_COUNTRIES)[T.GERMANY]',
      u'C(source_country, levels=TOP_15_COUNTRIES)[T.FRANCE]',
      u'C(source_country, levels=TOP_15_COUNTRIES)[T.ITALY]',
      u'C(source_country, levels=TOP_15_COUNTRIES)[T.CANADA]',
      u'C(source_country, levels=TOP_15_COUNTRIES)[T.CHINA]',
      u'C(source_country, levels=TOP_15_COUNTRIES)[T.AUSTRALIA]',
      u'C(source_country, levels=TOP_15_COUNTRIES)[T.SPAIN]',
      u'C(source_country, levels=TOP_15_COUNTRIES)[T.NETHERLANDS]',
      u'C(source_country, levels=TOP_15_COUNTRIES)[T.SWEDEN]',
      u'C(source_country, levels=TOP_15_COUNTRIES)[T.INDIA]',
      u'C(source_country, levels=TOP_15_COUNTRIES)[T.OTHER]',
      ],
    "Ethnicity": [
      u'mf.MC(eth1, eth2, weights=eth_weight, levels=TOP_15_ETHNICITIES)[0]',
      u'mf.MC(eth1, eth2, weights=eth_weight, levels=TOP_15_ETHNICITIES)[1]',
      u'mf.MC(eth1, eth2, weights=eth_weight, levels=TOP_15_ETHNICITIES)[2]',
      u'mf.MC(eth1, eth2, weights=eth_weight, levels=TOP_15_ETHNICITIES)[3]',
      u'mf.MC(eth1, eth2, weights=eth_weight, levels=TOP_15_ETHNICITIES)[4]',
      u'mf.MC(eth1, eth2, weights=eth_weight, levels=TOP_15_ETHNICITIES)[5]',
      u'mf.MC(eth1, eth2, weights=eth_weight, levels=TOP_15_ETHNICITIES)[6]',
      u'mf.MC(eth1, eth2, weights=eth_weight, levels=TOP_15_ETHNICITIES)[7]',
      u'mf.MC(eth1, eth2, weights=eth_weight, levels=TOP_15_ETHNICITIES)[8]',
      u'mf.MC(eth1, eth2, weights=eth_weight, levels=TOP_15_ETHNICITIES)[9]',
      u'mf.MC(eth1, eth2, weights=eth_weight, levels=TOP_15_ETHNICITIES)[10]',
      u'mf.MC(eth1, eth2, weights=eth_weight, levels=TOP_15_ETHNICITIES)[11]',
      u'mf.MC(eth1, eth2, weights=eth_weight, levels=TOP_15_ETHNICITIES)[12]',
      u'mf.MC(eth1, eth2, weights=eth_weight, levels=TOP_15_ETHNICITIES)[13]',
      ],
    "AuthorAge": [
      u'I(auth_prev_papers == 0)[T.True]',
      u'np.log10(auth_prev_papers + 1)',
      ],
    "SourceCites": [
      u'I(source_ncites == 1)[T.True]',
      u'np.log10(source_ncites)',
      u'I(np.log10(source_ncites) ** 2)',
      ],
    "SourceAuthors": [
      u'I(source_n_authors > 20)[T.True]',
      u'np.log10(np.clip(source_n_authors, 0, 20))',
      u'I(np.log10(np.clip(source_n_authors, 0, 20)) ** 2)',
      ],
    "MeshCounts": [
        u'I(source_n_mesh_ex == 0)[T.True]',
        u'I(sink_n_mesh_ex == 0)[T.True]',
        u'np.log10(source_n_mesh_ex + 1)',
        u'np.log10(sink_n_mesh_ex + 1)',
        ],
    "Journal": [
        u'journal_same[T.True]',
        u'I(jj_sim == 0)[T.True]',
        u'np.log10(jj_sim + 1)',
        u'I(np.log10(jj_sim + 1) ** 2)',
        ],
    "YearSpan": [
        u'I(year_span < 0)[T.True]',
        u'I(year_span == 0)[T.True]',
        u'mf.score_log_1(year_span)',
        u'I(mf.score_log_1(year_span) ** 2)',
        ],
    "SinkCites": [
        u'I(sink_prev_ncites == 0)[T.True]',
        u'np.log10(sink_prev_ncites + 1)',
        u'I(np.log10(sink_prev_ncites + 1) ** 2)',
        ],
    "PubType": [
        u'source_is_journal[T.True]',
        u'source_is_review[T.True]',
        u'source_is_case_rep[T.True]',
        u'source_is_let_ed_com[T.True]',
        u'sink_is_journal[T.True]',
        u'sink_is_review[T.True]',
        u'sink_is_case_rep[T.True]',
        u'sink_is_let_ed_com[T.True]',
        ],
    "Language": [
        u'source_is_eng[T.True]',
        u'sink_is_eng[T.True]',
        ],
    "VolumeNovelty": [
        u'np.log10(np.nan_to_num(source_V_novelty) + 1)',
        u'np.log10(np.nan_to_num(sink_V_novelty) + 1)',
        u'I(np.log10(np.nan_to_num(sink_V_novelty) + 1) ** 2)'
        ]
    }
